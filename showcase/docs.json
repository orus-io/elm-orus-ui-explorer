[{"name":"OUI","comment":"\n\n@docs Color\n\n","unions":[{"name":"Color","comment":" Colors\n","args":[],"cases":[["Primary",[]],["PrimaryContainer",[]],["Secondary",[]],["SecondaryContainer",[]],["Tertiary",[]],["TertiaryContainer",[]],["Error",[]],["ErrorContainer",[]]]}],"aliases":[],"values":[],"binops":[]},{"name":"OUI.Button","comment":" A button creation API\n\n@docs Type, Button\n\n\n# Constructor\n\n@docs new\n\n\n# Basic properties\n\n@docs withText, withIcon, color\n\n\n# Actions\n\n@docs onClick, disabled\n\n\n# Button types\n\n@docs elevatedButton, filledButton, tonalButton, outlinedButton, textButton, smallFAB, mediumFAB, largeFAB, extendedFAB, iconButton\n\n\n# Internal\n\n@docs Props, getProperties\n\n","unions":[{"name":"Button","comment":" A button\n","args":["constraints","msg"],"cases":[]},{"name":"Type","comment":" A button type\n","args":[],"cases":[["Elevated",[]],["Filled",[]],["Tonal",[]],["Outlined",[]],["Text",[]],["SmallFAB",[]],["MediumFAB",[]],["LargeFAB",[]],["ExtendedFAB",[]],["Icon",[]]]}],"aliases":[{"name":"Props","comment":" underlying properties of the button\n","args":["msg"],"type":"{ text : String.String, icon : Maybe.Maybe String.String, onClick : Maybe.Maybe msg, color : OUI.Color, type_ : OUI.Button.Type }"}],"values":[{"name":"color","comment":" Set the button primary color\n","type":"OUI.Color -> OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"disabled","comment":" Set the button as 'disabled'\n\nCan only be called once\n\n","type":"OUI.Button.Button { props | needOnClickOrDisabled : () } msg -> OUI.Button.Button { a | hasAction : () } msg"},{"name":"elevatedButton","comment":" Set the button type to 'Elevated' (default)\n","type":"OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"extendedFAB","comment":" Set the button type to 'ExtendedFAB'\n","type":"OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"filledButton","comment":" Set the button type to 'Filled'\n","type":"OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"getProperties","comment":" ","type":"OUI.Button.Button { constraints | hasText : (), hasAction : () } msg -> { text : String.String, icon : Maybe.Maybe String.String, onClick : Maybe.Maybe msg, color : OUI.Color, type_ : OUI.Button.Type }"},{"name":"iconButton","comment":" Set the button type to 'iconButton'\n","type":"OUI.Button.Button { a | hasIcon : () } msg -> OUI.Button.Button { a | hasIcon : () } msg"},{"name":"largeFAB","comment":" Set the button type to 'LargeFAB'\n","type":"OUI.Button.Button { a | hasIcon : () } msg -> OUI.Button.Button { a | hasIcon : () } msg"},{"name":"mediumFAB","comment":" Set the button type to 'MediumFAB'\n","type":"OUI.Button.Button { a | hasIcon : () } msg -> OUI.Button.Button { a | hasIcon : () } msg"},{"name":"new","comment":" Create an empty button\n\nA text and an action (onClick or disabled) must be set before it can be\nrendered\n\nBy default, the button is of the 'Elevated' type, and its color is 'Primary'\n\n","type":"OUI.Button.Button { needOnClickOrDisabled : (), needText : (), hasNoIcon : () } msg"},{"name":"onClick","comment":" Set the button 'onClick' handler\n\nCan only be called once\n\n","type":"msg -> OUI.Button.Button { a | needOnClickOrDisabled : () } msg -> OUI.Button.Button { a | hasAction : () } msg"},{"name":"outlinedButton","comment":" Set the button type to 'Outlined'\n","type":"OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"smallFAB","comment":" Set the button type to 'SmallFAB'\n","type":"OUI.Button.Button { a | hasIcon : () } msg -> OUI.Button.Button { a | hasIcon : () } msg"},{"name":"textButton","comment":" Set the button type to 'TextButton'\n","type":"OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"tonalButton","comment":" Set the button type to 'Tonal'\n","type":"OUI.Button.Button a msg -> OUI.Button.Button a msg"},{"name":"withIcon","comment":" Set the button icon\n\nCan only be called once\n\n","type":"String.String -> OUI.Button.Button { a | hasNoIcon : () } msg -> OUI.Button.Button { a | hasIcon : () } msg"},{"name":"withText","comment":" Set the button text\n\nCan only be called once\n\n","type":"String.String -> OUI.Button.Button { a | needText : () } msg -> OUI.Button.Button { a | hasText : () } msg"}],"binops":[]},{"name":"OUI.Explorer","comment":"\n\n@docs Book, BookMsg, Page, Route, Shared, SharedMsg, Explorer\n@docs addBook, book, category, event, explorer, finalize\n@docs withMarkdownChapter, withStaticChapter\n\n","unions":[{"name":"BookMsg","comment":" A stateless book message\n","args":[],"cases":[]},{"name":"SharedMsg","comment":" Shared state message\n","args":[],"cases":[]}],"aliases":[{"name":"Book","comment":" A stateless book\n","args":["msg"],"type":"{ title : String.String, chapters : List.List (Element.Element msg) }"},{"name":"Explorer","comment":" ","args":["shared","sharedMsg","current","previous","currentMsg","previousMsg"],"type":"{ app : Spa.Builder OUI.Explorer.Route () shared sharedMsg (OUI.Explorer.Page (Spa.PageStack.Msg OUI.Explorer.Route currentMsg previousMsg)) current previous currentMsg previousMsg, categories : List.List ( String.String, List.List String.String ) }"},{"name":"Page","comment":" A explorer page\n","args":["msg"],"type":"{ title : String.String, content : Element.Element msg }"},{"name":"Route","comment":" The explorer routes are simple strings\n","args":[],"type":"String.String"},{"name":"Shared","comment":" The shared state\n","args":[],"type":"{ lastEvents : List.List String.String }"}],"values":[{"name":"addBook","comment":" Add a book to the current category\n","type":"OUI.Explorer.Book OUI.Explorer.BookMsg -> OUI.Explorer.Explorer OUI.Explorer.Shared OUI.Explorer.SharedMsg current previous currentMsg previousMsg -> OUI.Explorer.Explorer OUI.Explorer.Shared OUI.Explorer.SharedMsg () (Spa.PageStack.Model Spa.SetupError current previous) OUI.Explorer.BookMsg (Spa.PageStack.Msg OUI.Explorer.Route currentMsg previousMsg)"},{"name":"book","comment":" Creates a new empty book\n","type":"String.String -> OUI.Explorer.Book msg"},{"name":"category","comment":" Add a category to a Explorer\n\nAll subsequent books will be added to this category, until a new category is\nadded.\n\n","type":"String.String -> OUI.Explorer.Explorer shared sharedMsg current previous currentMsg previousMsg -> OUI.Explorer.Explorer shared sharedMsg current previous currentMsg previousMsg"},{"name":"event","comment":" A simple event\n\nThe passed string will be logged in the event window\n\n","type":"String.String -> OUI.Explorer.BookMsg"},{"name":"explorer","comment":" creates an empty Explorer\n","type":"OUI.Explorer.Explorer shared sharedMsg () () () ()"},{"name":"finalize","comment":" Finalize a explorer and returns Program\n","type":"OUI.Explorer.Explorer OUI.Explorer.Shared OUI.Explorer.SharedMsg current previous currentMsg previousMsg -> Platform.Program () (Spa.Model String.String OUI.Explorer.Shared current previous) (Spa.Msg OUI.Explorer.SharedMsg (Spa.PageStack.Msg String.String currentMsg previousMsg))"},{"name":"withMarkdownChapter","comment":" Add a mardown chapter to a book\n","type":"String.String -> OUI.Explorer.Book msg -> OUI.Explorer.Book msg"},{"name":"withStaticChapter","comment":" Add a static content chapter to a book\n","type":"Element.Element msg -> OUI.Explorer.Book msg -> OUI.Explorer.Book msg"}],"binops":[]},{"name":"OUI.Icon","comment":"\n\n\n# Constructor\n\n@docs Icon, withSize, withColor\n\n\n# Adapters\n\n@docs elmMaterialIcons, materialIcons\n\n\n# Internals\n\n@docs Renderer\n\n","unions":[{"name":"Renderer","comment":" ","args":[],"cases":[["Svg",["Basics.Int -> Color.Color -> Svg.Svg Basics.Never"]],["Html",["Basics.Int -> Color.Color -> Html.Html Basics.Never"]]]}],"aliases":[{"name":"Icon","comment":" An Icon\n\nThe default size / color is decided by the final rendering (with\nOUI.Material.renderIcon for instance).\n\nWhen used inside other components, like buttons, the color & size will most\nprobably be ignored.\n\nA future version may separated icons with size/color from raw icons, and\nput most details in internal hidden types\n\n","args":[],"type":"{ size : Maybe.Maybe Basics.Int, color : Maybe.Maybe OUI.Color, renderer : OUI.Icon.Renderer }"}],"values":[{"name":"elmMaterialIcons","comment":" For using [icidasset/elm-material-icons](https://dark.elm.dmy.fr/packages/icidasset/elm-material-icons/latest/)\n\n    import Material.Icons exposing (offline_bolt)\n    import Material.Icons.Types exposing (Coloring(..))\n    import OUI.Icon exposing (Icon)\n\n    check : Icon\n    check =\n        Material.Icons.done\n            |> OUI.Icon.elmMaterialIcons Color\n\n","type":"(Color.Color -> coloring) -> (Basics.Int -> coloring -> Html.Html Basics.Never) -> OUI.Icon.Icon"},{"name":"materialIcons","comment":" For using [danmarcab/material-icons](https://dark.elm.dmy.fr/packages/danmarcab/material-icons/latest/)\n\n    import Material.Icons.Action\n    import OUI.Icon exposing (Icon)\n\n    check : Icon\n    check =\n        Material.Icons.Action.done\n            |> OUI.Icon.materialIcons\n\n","type":"(Color.Color -> Basics.Int -> Svg.Svg Basics.Never) -> OUI.Icon.Icon"},{"name":"withColor","comment":" set the icon color\n","type":"OUI.Color -> OUI.Icon.Icon -> OUI.Icon.Icon"},{"name":"withSize","comment":" set the icon size\n","type":"Basics.Int -> OUI.Icon.Icon -> OUI.Icon.Icon"}],"binops":[]},{"name":"OUI.Material","comment":" A elm-ui based renderer API\n\n@docs renderText, renderButton, renderIcon\n\n@docs toElementColor\n\n","unions":[],"aliases":[],"values":[{"name":"renderButton","comment":" Render a button\n","type":"OUI.Material.Theme.Theme -> List.List (Element.Attribute msg) -> OUI.Button.Button { constraints | hasText : (), hasAction : () } msg -> Element.Element msg"},{"name":"renderIcon","comment":" Render an icon\n","type":"OUI.Material.Theme.Theme -> List.List (Element.Attribute msg) -> OUI.Icon.Icon -> Element.Element msg"},{"name":"renderText","comment":" Render a text\n","type":"OUI.Material.Theme.Theme -> OUI.Text.Text -> Element.Element msg"},{"name":"toElementColor","comment":" Convert a color to a Element.color\n","type":"Color.Color -> Element.Color"}],"binops":[]},{"name":"OUI.Material.Color","comment":" Material 3 color utilities and scheme\n\n@docs KeyColors, Scheme, defaultKeyColors, defaultLightScheme, defaultDarkScheme, lightFromKeyColors, darkFromKeyColors\n\n@docs getColor, getOnColor, getElementColor, getOnElementColor, toElementColor\n\n@docs hoverStateLayerOpacity, focusStateLayerOpacity, pressStateLayerOpacity\n\n@docs setAlpha, withShade\n\n","unions":[],"aliases":[{"name":"KeyColors","comment":" A set of colors suitable for generating a color scheme\n","args":[],"type":"{ primary : Color.Color, secondary : Color.Color, tertiary : Color.Color, error : Color.Color, neutral : Color.Color, neutralVariant : Color.Color }"},{"name":"Scheme","comment":" A Material 3 color scheme\n","args":[],"type":"{ primary : Color.Color, primaryContainer : Color.Color, onPrimary : Color.Color, onPrimaryContainer : Color.Color, inversePrimary : Color.Color, secondary : Color.Color, secondaryContainer : Color.Color, onSecondary : Color.Color, onSecondaryContainer : Color.Color, tertiary : Color.Color, tertiaryContainer : Color.Color, onTertiary : Color.Color, onTertiaryContainer : Color.Color, surface : Color.Color, surfaceDim : Color.Color, surfaceBright : Color.Color, surfaceContainerLowest : Color.Color, surfaceContainerLow : Color.Color, surfaceContainer : Color.Color, surfaceContainerHigh : Color.Color, surfaceContainerHighest : Color.Color, surfaceVariant : Color.Color, onSurface : Color.Color, onSurfaceVariant : Color.Color, inverseSurface : Color.Color, inverseOnSurface : Color.Color, background : Color.Color, onBackground : Color.Color, error : Color.Color, errorContainer : Color.Color, onError : Color.Color, onErrorContainer : Color.Color, outline : Color.Color, outlineVariant : Color.Color, shadow : Color.Color, surfaceTint : Color.Color, scrim : Color.Color }"}],"values":[{"name":"darkFromKeyColors","comment":" Create a dark color scheme from key colors\n","type":"OUI.Material.Color.KeyColors -> OUI.Material.Color.Scheme"},{"name":"defaultDarkScheme","comment":" The default Material 3 dark theme based on the default key colors\n","type":"OUI.Material.Color.Scheme"},{"name":"defaultKeyColors","comment":" The default Material 3 key colors\n","type":"OUI.Material.Color.KeyColors"},{"name":"defaultLightScheme","comment":" The default Material 3 light theme based on the default key colors\n","type":"OUI.Material.Color.Scheme"},{"name":"focusStateLayerOpacity","comment":" The \"focus\" state layer opacity\n","type":"Basics.Float"},{"name":"getColor","comment":" Get a color of a scheme\n","type":"OUI.Color -> OUI.Material.Color.Scheme -> Color.Color"},{"name":"getElementColor","comment":" Get a color of a scheme directly as a 'Element.Color'\n","type":"OUI.Color -> OUI.Material.Color.Scheme -> Element.Color"},{"name":"getOnColor","comment":" Get a \"on\" color of a scheme\n","type":"OUI.Color -> OUI.Material.Color.Scheme -> Color.Color"},{"name":"getOnElementColor","comment":" Get a \"on\" color of a scheme directly as a 'Element.Color'\n","type":"OUI.Color -> OUI.Material.Color.Scheme -> Element.Color"},{"name":"hoverStateLayerOpacity","comment":" The \"hover\" state layer opacity\n","type":"Basics.Float"},{"name":"lightFromKeyColors","comment":" Create a light color scheme from key colors\n","type":"OUI.Material.Color.KeyColors -> OUI.Material.Color.Scheme"},{"name":"pressStateLayerOpacity","comment":" The \"press\" state layer opacity\n","type":"Basics.Float"},{"name":"setAlpha","comment":" set the opacity of a color\n","type":"Basics.Float -> Color.Color -> Color.Color"},{"name":"toElementColor","comment":" Convert a Color to Element.Color\n","type":"Color.Color -> Element.Color"},{"name":"withShade","comment":" Simulates adding a color in front (subtractive color mixing).\n\n    --Darkens the color by 50%\n    withShade (Color.rgb255 255 255 255) 0.5\n\n    --Makes the color 50% more red\n    withShade (Color.rgb255 255 0 0) 0.5\n\n","type":"Color.Color -> Basics.Float -> Color.Color -> Color.Color"}],"binops":[]},{"name":"OUI.Material.Theme","comment":"\n\n@docs Theme, defaultTheme, defaultTypescale\n\n","unions":[],"aliases":[{"name":"Theme","comment":" A material theme\n\nContains a color scheme, a typescale, and layouts for all the components\n\n","args":[],"type":"{ colorscheme : OUI.Material.Color.Scheme, typescale : OUI.Material.Typography.Typescale, button : OUI.Material.Button.Theme }"}],"values":[{"name":"defaultTheme","comment":" The default Material 3 theme\n","type":"OUI.Material.Theme.Theme"},{"name":"defaultTypescale","comment":" The default Material 3 Typescale\n","type":"OUI.Material.Typography.Typescale"}],"binops":[]},{"name":"OUI.Showcase","comment":" Provides pages for a OUI.Explorer\n\n@docs addPages\n\n","unions":[],"aliases":[],"values":[{"name":"addPages","comment":" add the default showcase pages to a Explorer\n","type":"OUI.Explorer.Explorer OUI.Explorer.Shared OUI.Explorer.SharedMsg current previous currentMsg previousMsg -> OUI.Explorer.Explorer OUI.Explorer.Shared OUI.Explorer.SharedMsg () (Spa.PageStack.Model Spa.SetupError () (Spa.PageStack.Model Spa.SetupError () (Spa.PageStack.Model Spa.SetupError current previous))) OUI.Explorer.BookMsg (Spa.PageStack.Msg OUI.Explorer.Route OUI.Explorer.BookMsg (Spa.PageStack.Msg OUI.Explorer.Route OUI.Explorer.BookMsg (Spa.PageStack.Msg OUI.Explorer.Route currentMsg previousMsg)))"}],"binops":[]},{"name":"OUI.Text","comment":"\n\n@docs Type, Size, Text\n@docs text, withSize, withType\n\n\n# Direct constructors\n\n@docs displayLarge, displayMedium, displaySmall\n@docs headlineLarge, headlineMedium, headlineSmall\n@docs titleLarge, titleMedium, titleSmall\n@docs labelLarge, labelMedium, labelSmall\n@docs bodyLarge, bodyMedium, bodySmall\n\n","unions":[{"name":"Size","comment":" Text sizes\n","args":[],"cases":[["Small",[]],["Medium",[]],["Large",[]]]},{"name":"Text","comment":" A Text component\n","args":[],"cases":[["Text",["OUI.Text.Type","OUI.Text.Size","String.String"]]]},{"name":"Type","comment":" Text types\n","args":[],"cases":[["Display",[]],["Headline",[]],["Title",[]],["Label",[]],["Body",[]]]}],"aliases":[],"values":[{"name":"bodyLarge","comment":" create a body large text\n","type":"String.String -> OUI.Text.Text"},{"name":"bodyMedium","comment":" create a body medium text\n","type":"String.String -> OUI.Text.Text"},{"name":"bodySmall","comment":" create a body small text\n","type":"String.String -> OUI.Text.Text"},{"name":"displayLarge","comment":" create a display large text\n","type":"String.String -> OUI.Text.Text"},{"name":"displayMedium","comment":" create a display medium text\n","type":"String.String -> OUI.Text.Text"},{"name":"displaySmall","comment":" create a display small text\n","type":"String.String -> OUI.Text.Text"},{"name":"headlineLarge","comment":" create a headline large text\n","type":"String.String -> OUI.Text.Text"},{"name":"headlineMedium","comment":" create a headline medium text\n","type":"String.String -> OUI.Text.Text"},{"name":"headlineSmall","comment":" create a headline small text\n","type":"String.String -> OUI.Text.Text"},{"name":"labelLarge","comment":" create a label large text\n","type":"String.String -> OUI.Text.Text"},{"name":"labelMedium","comment":" create a label medium text\n","type":"String.String -> OUI.Text.Text"},{"name":"labelSmall","comment":" create a label small text\n","type":"String.String -> OUI.Text.Text"},{"name":"text","comment":" Create a new text component\n\nwith default \"body\" type and \"medium\" size\n\n","type":"String.String -> OUI.Text.Text"},{"name":"titleLarge","comment":" create a title large text\n","type":"String.String -> OUI.Text.Text"},{"name":"titleMedium","comment":" create a title medium text\n","type":"String.String -> OUI.Text.Text"},{"name":"titleSmall","comment":" create a title small text\n","type":"String.String -> OUI.Text.Text"},{"name":"withSize","comment":" set the text size\n","type":"OUI.Text.Size -> OUI.Text.Text -> OUI.Text.Text"},{"name":"withType","comment":" set the text type\n","type":"OUI.Text.Type -> OUI.Text.Text -> OUI.Text.Text"}],"binops":[]}]